stages:
  - Testing and Linting
  - Build
  - Release

Unit Testing and Linting:
  stage: Testing and Linting
  tags:
    - msul-docker
  image: python:3.10
  except:
    - tags
  script:
    - pip install -r requirements.txt
    # - pylint --fail-under=10.00 src/
    - pytest --junitxml=report.xml
  artifacts:
    when: always
    reports:
      junit: report.xml

Build Docs for GitLab:
  stage: Build
  tags:
    - msul-docker
  image: python:3.10
  only:
    - master
  except:
    - tags
  script:
    - pip install -r requirements.txt
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public

GitHub Release:
  stage: Release
  tags:
    - msul-docker
  image: alpine:latest
  when: manual
  only:
    - master
  except:
    - tags
  needs:
    - job: Build Docs for GitLab
      artifacts: true
  before_script:
    - apk add curl git openssh-client
  script:
    # Update GitHub code
    - rm -rf oai_repo.git
    - git clone --mirror git@gitlab.msu.edu:msu-libraries/repo-team/oai_repo.git
    - cd oai_repo.git
    - git push --force --mirror https://${GITHUB_USER_TOKEN}@github.com/MSU-Libraries/oai_repo.git
    # Update the GitHub Pages branch
    - sleep 30 # Needs time to propagate the changes first or this next step will fail
    - echo "{\"source\":{\"path\":\"/\", \"branch\":\"gh-pages\"}" > data.json
    - "curl -X POST -H 'Accept: application/vnd.github.v3+json' -u $GITHUB_USER_TOKEN https://api.github.com/repos/MSU-Libraries/oai_repo/pages -d '@data.json'"
